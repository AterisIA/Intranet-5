[Nota: Intranet - Intelig√™ncia Artificial - Agente Ariana]

[Nota: Onde]
Crie uma aplica√ß√£o na tela /agente-ariana usando React standalone de chat com IA chamada "Agente Ariana" usando TypeScript, Tailwind CSS e Shadcn/UI. A aplica√ß√£o deve funcionar de forma completamente independente, sem necessidade de autentica√ß√£o externa ou infraestrutura complexa.

[Nota: Requisitos T√©cnicos Fundamentais]
Use React 18 com TypeScript. Instale e configure Tailwind CSS e os seguintes componentes do Shadcn/UI: Button, Input, Card, CardContent, CardHeader, CardTitle, Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, Label, Textarea, ScrollArea, Separator, Toast e Toaster. Instale tamb√©m lucide-react para √≠cones.

[Nota: Estrutura de Layout Principal]
A interface ocupa toda a altura da viewport (h-screen) e usa um layout flex horizontal com duas colunas principais.
A primeira coluna (sidebar esquerda) tem largura fixa de 320px (w-80), borda direita, fundo bg-card e layout flex vertical.
A segunda coluna (√°rea do chat) ocupa o espa√ßo restante (flex-1) e tamb√©m usa layout flex vertical.

[Nota: Coluna da Esquerda - Sidebar]
No topo da sidebar, crie um container com padding de 8px (p-2) e borda inferior.
Dentro dele:

Bot√£o "Novo chat" (w-full, mb-3, bg-primary hover:bg-primary/90, √≠cone MessageCircle √† esquerda).

Campo de busca com √≠cone Search posicionado absolutely (left-3 top-3), placeholder "Buscar em chats...", padding-left (pl-10).

Se√ß√£o ‚ÄúProjetos‚Äù com padding de 8px (p-2) e borda inferior.
Cabe√ßalho flex justify-between com t√≠tulo ‚ÄúProjetos‚Äù (font-semibold text-sm) e bot√£o ghost com √≠cone Plus.
O bot√£o Plus abre um Dialog modal ‚ÄúNovo Projeto‚Äù com Input ‚ÄúNome do Projeto‚Äù e Textarea ‚ÄúDescri√ß√£o‚Äù (opcional), seguido de bot√£o ‚ÄúCriar Projeto‚Äù (w-full).

Lista (space-y-2) abaixo do cabe√ßalho exibindo cada projeto como linha flex com √≠cone FolderOpen (h-4 w-4 text-muted-foreground) e nome clic√°vel (cursor-pointer hover:text-primary).
Ao clicar em um projeto, cria uma nova conversa associada.

Se√ß√£o ‚ÄúConversas Recentes‚Äù dentro de ScrollArea (flex-1) com padding (p-2), t√≠tulo ‚ÄúConversas Recentes‚Äù (font-semibold text-sm mb-2) e lista de cards de conversa (space-y-2).

[Nota: Cards de Conversa]
Cada conversa √© um Card com classe group, transi√ß√£o de cores e background condicional:

bg-primary/10 quando selecionada

hover:bg-muted quando n√£o selecionada
CardContent com padding p-3.

Modo n√£o edit√°vel: container clic√°vel (cursor-pointer) que carrega as mensagens e define como conversa atual.
Dentro: t√≠tulo (text-sm font-medium flex-1) e bot√£o Edit (opacity-0 group-hover:opacity-100 h-6 w-6 p-0 √≠cone Edit h-3 w-3).
Abaixo do t√≠tulo: se houver projeto, exibir ‚ÄúüìÅ [nome do projeto]‚Äù (text-xs text-muted-foreground mt-1).
√öltima linha: data formatada (text-xs text-muted-foreground mt-1).

Modo edit√°vel: flex items-center space-x-2 com Input (flex-1 h-8 text-sm autoFocus) e bot√µes ghost pequenos com √≠cones Check e X.
Input responde a Enter (confirmar) e Escape (cancelar).

Ap√≥s a lista, se houver mais de 2 conversas e todas n√£o exibidas, mostrar bot√£o ghost (w-full justify-center text-sm) com √≠cone ChevronDown e texto ‚ÄúConversas anteriores‚Äù.
Se expandido, mostrar bot√£o com √≠cone ChevronUp e texto ‚ÄúMostrar menos‚Äù.

[Nota: Coluna da Direita - √Årea do Chat]
A coluna (flex-1 flex flex-col) tem dois estados:

Sem conversa selecionada

Com conversa selecionada

[Nota: Estado - Sem Conversa Selecionada]
Tela centralizada (flex-1 flex items-center justify-center) com:

Imagem circular (96x96px, w-24 h-24 mx-auto rounded-full object-cover mb-4)

T√≠tulo ‚ÄúAgente Ariana‚Äù (text-2xl font-semibold mb-2)

Texto ‚ÄúSelecione uma conversa ou inicie um novo chat‚Äù (text-muted-foreground mb-4)

Bot√£o com √≠cone Plus e texto ‚ÄúNovo Chat‚Äù que cria nova conversa.

[Nota: Estado - Com Conversa Selecionada]
Tr√™s se√ß√µes verticais:

HEADER FIXO: p-4 border-b bg-card

Flex items-center space-x-3

Imagem Ariana (w-12 h-12 rounded-full object-cover)

Nome ‚ÄúAgente Ariana‚Äù (text-xl font-semibold)

Sauda√ß√£o ‚ÄúQue bom te ver, [nome do usu√°rio]‚Äù (text-sm text-muted-foreground)

√ÅREA DE MENSAGENS: ScrollArea (flex-1 p-4)

Container (space-y-4 max-w-4xl mx-auto)

Mensagens: flex justify-end (usu√°rio) ou justify-start (IA)

Bal√£o: max-w-xs lg:max-w-md, px-4 py-2, rounded-lg

Cores: bg-primary text-primary-foreground (usu√°rio) / bg-muted (IA)

Texto (text-sm) e hor√°rio (text-xs opacity-70 mt-1) formatado HH:MM:SS

Div final com ref para scroll autom√°tico

INPUT √ÅREA: p-4 border-t bg-card

Flex items-end space-x-2 max-w-4xl mx-auto

Se houver √°udio: div flex-1 p-2 bg-muted rounded-lg ‚Äú√Åudio gravado - pronto para enviar‚Äù (text-sm)

Se n√£o houver: Input flex-1 placeholder ‚ÄúPergunte alguma coisa...‚Äù envia ao Enter

Bot√£o grava√ß√£o: variant condicional (destructive se gravando, outline se n√£o), √≠cone Mic/MicOff

Bot√£o enviar: √≠cone Send, desabilitado se sem texto/√°udio

[Nota: L√≥gica de Estado e Funcionalidades]
Interfaces:

Project { id, name, description?, created_at }

Conversation { id, title, project_id?, created_at, updated_at }

Message { id, message, message_type, role, created_at, audio_url? }

Estados com useState: projects, conversations, messages, currentConversation, searchTerm, inputMessage, isRecording, audioBlob, newProjectName, newProjectDescription, isNewProjectOpen, showAllConversations, editingConversationId, editingConversationTitle.
Refs: mediaRecorderRef, audioChunksRef, messagesEndRef.

[Nota: Implementa√ß√£o das Fun√ß√µes Principais]
CRIAR PROJETO: createProject adiciona novo projeto ao array projects, gera id, limpa campos, fecha modal, mostra toast sucesso.
CRIAR CONVERSA: createConversation cria nova conversa, define currentConversation, limpa messages, mostra toast sucesso.
CARREGAR MENSAGENS: loadMessages filtra messages por conversationId e ordena por created_at.
ENVIAR MENSAGEM: sendMessage cria mensagem user, adiciona, simula resposta IA ap√≥s 1-2s, limpa input/audio.
GRAVA√á√ÉO DE √ÅUDIO: startRecording (permite microfone, inicia MediaRecorder, define isRecording true), stopRecording (gera Blob, encerra tracks, define isRecording false).
EDITAR T√çTULO: updateConversationTitle atualiza t√≠tulo, limpa estados, mostra toast sucesso. startEditingConversation e cancelEditingConversation controlam edi√ß√£o.
FILTRAGEM: filteredConversations filtra por searchTerm; displayedConversations mostra 2 ou todas; hasMoreConversations detecta overflow.
UTILIDADES: getProjectName retorna nome do projeto; scrollToBottom faz scroll autom√°tico.

[Nota: Efeitos Colaterais]
useEffect com scroll autom√°tico sempre que messages mudar.

[Nota: Dados Mock Iniciais]
projects: 2-3 exemplos (‚ÄúDesenvolvimento Web‚Äù, ‚ÄúMarketing Digital‚Äù).
conversations: 2-3 exemplos (‚ÄúD√∫vidas sobre React‚Äù, ‚ÄúPlanejamento de Sprint‚Äù, ‚ÄúAn√°lise de M√©tricas‚Äù).
messages: vazio inicialmente.

[Nota: Sistema de Toast]
Configure Toast do Shadcn/UI para notifica√ß√µes de sucesso e erro.
Posicione o Toaster no layout principal.

[Nota: Responsividade e Acessibilidade]
max-w-xs em mobile, max-w-md em desktop.
Todos os bot√µes com aria-labels.
Campo de edi√ß√£o autoFocus e responde a Enter/Escape.

[Nota: Paleta de Cores e Design System]
Use vari√°veis CSS do Shadcn/UI:

bg-background (fundo principal)

bg-card (cards/sidebar)

bg-primary (mensagens do usu√°rio/bot√µes principais)

text-primary-foreground (texto em primary)

bg-muted (mensagens IA)

text-muted-foreground (textos secund√°rios)

border (bordas)
Cantos rounded-lg/full e espa√ßamentos Tailwind (2, 3, 4, 8, 12, 16px).

[Nota: √çcones Lucide]
MessageCircle, Search, Plus, Mic, MicOff, Send, FolderOpen, Edit, Check, X, ChevronDown, ChevronUp.

[Nota: Comportamentos Interativos Espec√≠ficos]
Clique em projeto cria conversa associada.
Clique em conversa carrega e define atual.
Bot√£o Edit aparece apenas no hover da conversa selecionada.
Edi√ß√£o inline: Enter confirma, Escape cancela.
Bot√£o enviar desabilitado se sem texto/√°udio.
Bot√£o grava√ß√£o alterna Mic/MicOff.
Lista mostra 2 conversas iniciais com bot√£o expandir.

[Nota: Estrutura de Arquivos Recomendada]
Arquivo principal App.tsx contendo todo o componente Ariana.
Configure tailwind.config.ts com cores do Shadcn/UI.
Componentes Shadcn/UI em src/components/ui/.
Sem roteamento ou autentica√ß√£o externa.

[Nota: Simula√ß√£o de Backend]
Todas as opera√ß√µes ocorrem em mem√≥ria com estados React.
Mensagens IA simuladas com respostas predefinidas ap√≥s delay.
Sem persist√™ncia real de dados.
